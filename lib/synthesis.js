import fetch from 'node-fetch';
import { readFileSync, createWriteStream } from 'fs'

// synthesis returns void or throws an error
// serverUrl is VOICEVOX Engine's url
// speaker is a speaker's id, number
// pathToQuery is a path to a query that used to synthesis audio. this is generated by createAudioQuery
// pathToWav is a path to put a wav file
export const synthesis = async (serverUrl, speaker, pathToQuery, pathToWav) => {
  const process = "synthesis"
  let url = new URL(serverUrl + process)
  let params = {
    speaker: speaker
  }
  url.search = new URLSearchParams(params).toString()

  let path = pathToQuery
  let audio_query = readFileSync(path)
  let body = JSON.parse(audio_query)

  try {
    const response = await fetch(url, {
      method: "POST",
      body: JSON.stringify(body),
      headers: { 'Content-Type': 'application/json' }
    })
    let fileStream = createWriteStream(pathToWav)
    await new Promise((resolve, reject) => {
      response.body.pipe(fileStream);
      response.body.on("error", () => {
        reject(new Error("An error occurred during synthesis"))
      })
      fileStream.on("finish", () => {
        console.log("Synthesis completed successfully");
        resolve()
      })
    })
  } catch (error) {
    console.log(error)
    throw new Error("An error occurred during synthesis")
  }
}